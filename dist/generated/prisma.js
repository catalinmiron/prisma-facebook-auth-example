"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var prisma_binding_1 = require("prisma-binding");
var typeDefs = "\n# THIS FILE HAS BEEN AUTO-GENERATED BY \"PRISMA DEPLOY\"\n# DO NOT EDIT THIS FILE DIRECTLY\n\n#\n# Model Types\n#\n\ntype Date implements Node {\n  id: ID!\n  inviter(where: UserWhereInput): User!\n  invitee(where: UserWhereInput): User!\n  place(where: PlaceWhereInput): Place\n  status: DATE_STATUS!\n  createdAt: DateTime!\n  isPaying: Boolean\n  seen: Boolean!\n  isCommonPlace: Boolean\n  requestingChat: Boolean!\n  inviterReadMessage: Boolean!\n  inviteeReadMessage: Boolean!\n}\n\ntype Location implements Node {\n  id: ID!\n  lat: Float!\n  lng: Float!\n  createdAt: DateTime!\n  city: String\n  country: String\n}\n\ntype Message implements Node {\n  id: ID!\n  createdAt: DateTime!\n  from(where: UserWhereInput): User!\n  to(where: UserWhereInput): User!\n  deliveredAt: DateTime!\n  readAt: DateTime!\n  date(where: DateWhereInput): Date\n}\n\ntype NotificationSettings implements Node {\n  id: ID!\n  user(where: UserWhereInput): User!\n  createdAt: DateTime!\n  onInvite: Boolean!\n  onMessage: Boolean!\n  onGeneral: Boolean!\n  onWink: Boolean!\n  onWinkConfirmation: Boolean!\n}\n\ntype Place implements Node {\n  id: ID!\n  name: String!\n  priceRating: Int\n  location(where: LocationWhereInput): Location!\n  googlePlacesId: String!\n  createdAt: DateTime!\n  weight: Int!\n  website: String\n  phone: String\n  address: String\n  openingHours: [String!]\n  types: [String!]\n  fromGoogle: Boolean\n  state: String\n  lastGoogleUpdate: DateTime\n  curatedFields: [String!]\n  description: String\n  detailsFetched: Boolean!\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]\n}\n\ntype User implements Node {\n  id: ID!\n  facebookUserId: String!\n  name: String!\n  first_name: String!\n  last_name: String!\n  birthday: DateTime\n  locale: String!\n  education(where: EducationWhereInput, orderBy: EducationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Education!]\n  work(where: WorkWhereInput, orderBy: WorkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Work!]\n  email: String\n  gender: GENDER!\n  targetGenders: [GENDER!]\n  photos(where: PhotoWhereInput, orderBy: PhotoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Photo!]\n  bio: String\n  location(where: LocationWhereInput): Location\n  lastLogin: DateTime!\n  distanceFilter: Int\n  ageFilter(where: AgeFilterWhereInput): AgeFilter\n  oneSignalId: String\n  notificationSettings(where: NotificationSettingsWhereInput): NotificationSettings\n  createdAt: DateTime!\n  onboarding: Boolean!\n  hideAge: Boolean!\n  language: LANGUAGES!\n  places(where: PlaceWhereInput, orderBy: PlaceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Place!]\n  reported(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]\n  uninterested(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]\n  sentMessages(where: MessageWhereInput, orderBy: MessageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Message!]\n  receivedMessages(where: MessageWhereInput, orderBy: MessageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Message!]\n  sentDates(where: DateWhereInput, orderBy: DateOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Date!]\n  receivedDates(where: DateWhereInput, orderBy: DateOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Date!]\n}\n\n\n#\n# Other Types\n#\n\ntype AgeFilter {\n  min: Int!\n  max: Int!\n}\n\ntype AgeFilterConnection {\n  pageInfo: PageInfo!\n  edges: [AgeFilterEdge]!\n  aggregate: AggregateAgeFilter!\n}\n\ninput AgeFilterCreateInput {\n  min: Int!\n  max: Int!\n}\n\ninput AgeFilterCreateOneInput {\n  create: AgeFilterCreateInput\n}\n\ntype AgeFilterEdge {\n  node: AgeFilter!\n  cursor: String!\n}\n\nenum AgeFilterOrderByInput {\n  min_ASC\n  min_DESC\n  max_ASC\n  max_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype AgeFilterPreviousValues {\n  min: Int!\n  max: Int!\n}\n\ntype AgeFilterSubscriptionPayload {\n  mutation: MutationType!\n  node: AgeFilter\n  updatedFields: [String!]\n  previousValues: AgeFilterPreviousValues\n}\n\ninput AgeFilterSubscriptionWhereInput {\n  AND: [AgeFilterSubscriptionWhereInput!]\n  OR: [AgeFilterSubscriptionWhereInput!]\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: AgeFilterWhereInput\n}\n\ninput AgeFilterUpdateInput {\n  min: Int\n  max: Int\n}\n\ninput AgeFilterUpdateOneInput {\n  create: AgeFilterCreateInput\n}\n\ninput AgeFilterWhereInput {\n  AND: [AgeFilterWhereInput!]\n  OR: [AgeFilterWhereInput!]\n  min: Int\n  min_not: Int\n  min_in: [Int!]\n  min_not_in: [Int!]\n  min_lt: Int\n  min_lte: Int\n  min_gt: Int\n  min_gte: Int\n  max: Int\n  max_not: Int\n  max_in: [Int!]\n  max_not_in: [Int!]\n  max_lt: Int\n  max_lte: Int\n  max_gt: Int\n  max_gte: Int\n}\n\ntype AggregateAgeFilter {\n  count: Int!\n}\n\ntype AggregateDate {\n  count: Int!\n}\n\ntype AggregateEducation {\n  count: Int!\n}\n\ntype AggregateLocation {\n  count: Int!\n}\n\ntype AggregateMessage {\n  count: Int!\n}\n\ntype AggregateNotificationSettings {\n  count: Int!\n}\n\ntype AggregatePhoto {\n  count: Int!\n}\n\ntype AggregatePlace {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype AggregateWork {\n  count: Int!\n}\n\ntype BatchPayload {\n  count: Long!\n}\n\nenum DATE_STATUS {\n  PENDING\n  ACCEPTED\n  REFUSED\n}\n\ntype DateConnection {\n  pageInfo: PageInfo!\n  edges: [DateEdge]!\n  aggregate: AggregateDate!\n}\n\ninput DateCreateInput {\n  status: DATE_STATUS\n  isPaying: Boolean\n  seen: Boolean\n  isCommonPlace: Boolean\n  requestingChat: Boolean\n  inviterReadMessage: Boolean\n  inviteeReadMessage: Boolean\n  inviter: UserCreateOneWithoutSentDatesInput!\n  invitee: UserCreateOneWithoutReceivedDatesInput!\n  place: PlaceCreateOneInput\n}\n\ninput DateCreateManyWithoutInviteeInput {\n  create: [DateCreateWithoutInviteeInput!]\n  connect: [DateWhereUniqueInput!]\n}\n\ninput DateCreateManyWithoutInviterInput {\n  create: [DateCreateWithoutInviterInput!]\n  connect: [DateWhereUniqueInput!]\n}\n\ninput DateCreateOneInput {\n  create: DateCreateInput\n  connect: DateWhereUniqueInput\n}\n\ninput DateCreateWithoutInviteeInput {\n  status: DATE_STATUS\n  isPaying: Boolean\n  seen: Boolean\n  isCommonPlace: Boolean\n  requestingChat: Boolean\n  inviterReadMessage: Boolean\n  inviteeReadMessage: Boolean\n  inviter: UserCreateOneWithoutSentDatesInput!\n  place: PlaceCreateOneInput\n}\n\ninput DateCreateWithoutInviterInput {\n  status: DATE_STATUS\n  isPaying: Boolean\n  seen: Boolean\n  isCommonPlace: Boolean\n  requestingChat: Boolean\n  inviterReadMessage: Boolean\n  inviteeReadMessage: Boolean\n  invitee: UserCreateOneWithoutReceivedDatesInput!\n  place: PlaceCreateOneInput\n}\n\ntype DateEdge {\n  node: Date!\n  cursor: String!\n}\n\nenum DateOrderByInput {\n  id_ASC\n  id_DESC\n  status_ASC\n  status_DESC\n  createdAt_ASC\n  createdAt_DESC\n  isPaying_ASC\n  isPaying_DESC\n  seen_ASC\n  seen_DESC\n  isCommonPlace_ASC\n  isCommonPlace_DESC\n  requestingChat_ASC\n  requestingChat_DESC\n  inviterReadMessage_ASC\n  inviterReadMessage_DESC\n  inviteeReadMessage_ASC\n  inviteeReadMessage_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype DatePreviousValues {\n  id: ID!\n  status: DATE_STATUS!\n  createdAt: DateTime!\n  isPaying: Boolean\n  seen: Boolean!\n  isCommonPlace: Boolean\n  requestingChat: Boolean!\n  inviterReadMessage: Boolean!\n  inviteeReadMessage: Boolean!\n}\n\ntype DateSubscriptionPayload {\n  mutation: MutationType!\n  node: Date\n  updatedFields: [String!]\n  previousValues: DatePreviousValues\n}\n\ninput DateSubscriptionWhereInput {\n  AND: [DateSubscriptionWhereInput!]\n  OR: [DateSubscriptionWhereInput!]\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: DateWhereInput\n}\n\nscalar DateTime\n\ninput DateUpdateInput {\n  status: DATE_STATUS\n  isPaying: Boolean\n  seen: Boolean\n  isCommonPlace: Boolean\n  requestingChat: Boolean\n  inviterReadMessage: Boolean\n  inviteeReadMessage: Boolean\n  inviter: UserUpdateOneWithoutSentDatesInput\n  invitee: UserUpdateOneWithoutReceivedDatesInput\n  place: PlaceUpdateOneInput\n}\n\ninput DateUpdateManyWithoutInviteeInput {\n  create: [DateCreateWithoutInviteeInput!]\n  connect: [DateWhereUniqueInput!]\n  disconnect: [DateWhereUniqueInput!]\n  delete: [DateWhereUniqueInput!]\n  update: [DateUpdateWithoutInviteeInput!]\n  upsert: [DateUpsertWithoutInviteeInput!]\n}\n\ninput DateUpdateManyWithoutInviterInput {\n  create: [DateCreateWithoutInviterInput!]\n  connect: [DateWhereUniqueInput!]\n  disconnect: [DateWhereUniqueInput!]\n  delete: [DateWhereUniqueInput!]\n  update: [DateUpdateWithoutInviterInput!]\n  upsert: [DateUpsertWithoutInviterInput!]\n}\n\ninput DateUpdateOneInput {\n  create: DateCreateInput\n  connect: DateWhereUniqueInput\n  disconnect: DateWhereUniqueInput\n  delete: DateWhereUniqueInput\n}\n\ninput DateUpdateWithoutInviteeDataInput {\n  status: DATE_STATUS\n  isPaying: Boolean\n  seen: Boolean\n  isCommonPlace: Boolean\n  requestingChat: Boolean\n  inviterReadMessage: Boolean\n  inviteeReadMessage: Boolean\n  inviter: UserUpdateOneWithoutSentDatesInput\n  place: PlaceUpdateOneInput\n}\n\ninput DateUpdateWithoutInviteeInput {\n  where: DateWhereUniqueInput!\n  data: DateUpdateWithoutInviteeDataInput!\n}\n\ninput DateUpdateWithoutInviterDataInput {\n  status: DATE_STATUS\n  isPaying: Boolean\n  seen: Boolean\n  isCommonPlace: Boolean\n  requestingChat: Boolean\n  inviterReadMessage: Boolean\n  inviteeReadMessage: Boolean\n  invitee: UserUpdateOneWithoutReceivedDatesInput\n  place: PlaceUpdateOneInput\n}\n\ninput DateUpdateWithoutInviterInput {\n  where: DateWhereUniqueInput!\n  data: DateUpdateWithoutInviterDataInput!\n}\n\ninput DateUpsertWithoutInviteeInput {\n  where: DateWhereUniqueInput!\n  update: DateUpdateWithoutInviteeDataInput!\n  create: DateCreateWithoutInviteeInput!\n}\n\ninput DateUpsertWithoutInviterInput {\n  where: DateWhereUniqueInput!\n  update: DateUpdateWithoutInviterDataInput!\n  create: DateCreateWithoutInviterInput!\n}\n\ninput DateWhereInput {\n  AND: [DateWhereInput!]\n  OR: [DateWhereInput!]\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  status: DATE_STATUS\n  status_not: DATE_STATUS\n  status_in: [DATE_STATUS!]\n  status_not_in: [DATE_STATUS!]\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  isPaying: Boolean\n  isPaying_not: Boolean\n  seen: Boolean\n  seen_not: Boolean\n  isCommonPlace: Boolean\n  isCommonPlace_not: Boolean\n  requestingChat: Boolean\n  requestingChat_not: Boolean\n  inviterReadMessage: Boolean\n  inviterReadMessage_not: Boolean\n  inviteeReadMessage: Boolean\n  inviteeReadMessage_not: Boolean\n  inviter: UserWhereInput\n  invitee: UserWhereInput\n  place: PlaceWhereInput\n}\n\ninput DateWhereUniqueInput {\n  id: ID\n}\n\ntype Education {\n  name: String!\n  type: String!\n}\n\ntype EducationConnection {\n  pageInfo: PageInfo!\n  edges: [EducationEdge]!\n  aggregate: AggregateEducation!\n}\n\ninput EducationCreateInput {\n  name: String!\n  type: String!\n}\n\ninput EducationCreateManyInput {\n  create: [EducationCreateInput!]\n}\n\ntype EducationEdge {\n  node: Education!\n  cursor: String!\n}\n\nenum EducationOrderByInput {\n  name_ASC\n  name_DESC\n  type_ASC\n  type_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype EducationPreviousValues {\n  name: String!\n  type: String!\n}\n\ntype EducationSubscriptionPayload {\n  mutation: MutationType!\n  node: Education\n  updatedFields: [String!]\n  previousValues: EducationPreviousValues\n}\n\ninput EducationSubscriptionWhereInput {\n  AND: [EducationSubscriptionWhereInput!]\n  OR: [EducationSubscriptionWhereInput!]\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: EducationWhereInput\n}\n\ninput EducationUpdateInput {\n  name: String\n  type: String\n}\n\ninput EducationUpdateManyInput {\n  create: [EducationCreateInput!]\n}\n\ninput EducationWhereInput {\n  AND: [EducationWhereInput!]\n  OR: [EducationWhereInput!]\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  type: String\n  type_not: String\n  type_in: [String!]\n  type_not_in: [String!]\n  type_lt: String\n  type_lte: String\n  type_gt: String\n  type_gte: String\n  type_contains: String\n  type_not_contains: String\n  type_starts_with: String\n  type_not_starts_with: String\n  type_ends_with: String\n  type_not_ends_with: String\n}\n\nenum GENDER {\n  MALE\n  FEMALE\n}\n\nenum LANGUAGES {\n  FR\n  EN\n}\n\ntype LocationConnection {\n  pageInfo: PageInfo!\n  edges: [LocationEdge]!\n  aggregate: AggregateLocation!\n}\n\ninput LocationCreateInput {\n  lat: Float!\n  lng: Float!\n  city: String\n  country: String\n}\n\ninput LocationCreateOneInput {\n  create: LocationCreateInput\n  connect: LocationWhereUniqueInput\n}\n\ntype LocationEdge {\n  node: Location!\n  cursor: String!\n}\n\nenum LocationOrderByInput {\n  id_ASC\n  id_DESC\n  lat_ASC\n  lat_DESC\n  lng_ASC\n  lng_DESC\n  createdAt_ASC\n  createdAt_DESC\n  city_ASC\n  city_DESC\n  country_ASC\n  country_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype LocationPreviousValues {\n  id: ID!\n  lat: Float!\n  lng: Float!\n  createdAt: DateTime!\n  city: String\n  country: String\n}\n\ntype LocationSubscriptionPayload {\n  mutation: MutationType!\n  node: Location\n  updatedFields: [String!]\n  previousValues: LocationPreviousValues\n}\n\ninput LocationSubscriptionWhereInput {\n  AND: [LocationSubscriptionWhereInput!]\n  OR: [LocationSubscriptionWhereInput!]\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: LocationWhereInput\n}\n\ninput LocationUpdateInput {\n  lat: Float\n  lng: Float\n  city: String\n  country: String\n}\n\ninput LocationUpdateOneInput {\n  create: LocationCreateInput\n  connect: LocationWhereUniqueInput\n  disconnect: LocationWhereUniqueInput\n  delete: LocationWhereUniqueInput\n}\n\ninput LocationWhereInput {\n  AND: [LocationWhereInput!]\n  OR: [LocationWhereInput!]\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  lat: Float\n  lat_not: Float\n  lat_in: [Float!]\n  lat_not_in: [Float!]\n  lat_lt: Float\n  lat_lte: Float\n  lat_gt: Float\n  lat_gte: Float\n  lng: Float\n  lng_not: Float\n  lng_in: [Float!]\n  lng_not_in: [Float!]\n  lng_lt: Float\n  lng_lte: Float\n  lng_gt: Float\n  lng_gte: Float\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  city: String\n  city_not: String\n  city_in: [String!]\n  city_not_in: [String!]\n  city_lt: String\n  city_lte: String\n  city_gt: String\n  city_gte: String\n  city_contains: String\n  city_not_contains: String\n  city_starts_with: String\n  city_not_starts_with: String\n  city_ends_with: String\n  city_not_ends_with: String\n  country: String\n  country_not: String\n  country_in: [String!]\n  country_not_in: [String!]\n  country_lt: String\n  country_lte: String\n  country_gt: String\n  country_gte: String\n  country_contains: String\n  country_not_contains: String\n  country_starts_with: String\n  country_not_starts_with: String\n  country_ends_with: String\n  country_not_ends_with: String\n}\n\ninput LocationWhereUniqueInput {\n  id: ID\n}\n\nscalar Long\n\ntype MessageConnection {\n  pageInfo: PageInfo!\n  edges: [MessageEdge]!\n  aggregate: AggregateMessage!\n}\n\ninput MessageCreateInput {\n  deliveredAt: DateTime!\n  readAt: DateTime!\n  from: UserCreateOneWithoutSentMessagesInput!\n  to: UserCreateOneWithoutReceivedMessagesInput!\n  date: DateCreateOneInput\n}\n\ninput MessageCreateManyWithoutFromInput {\n  create: [MessageCreateWithoutFromInput!]\n  connect: [MessageWhereUniqueInput!]\n}\n\ninput MessageCreateManyWithoutToInput {\n  create: [MessageCreateWithoutToInput!]\n  connect: [MessageWhereUniqueInput!]\n}\n\ninput MessageCreateWithoutFromInput {\n  deliveredAt: DateTime!\n  readAt: DateTime!\n  to: UserCreateOneWithoutReceivedMessagesInput!\n  date: DateCreateOneInput\n}\n\ninput MessageCreateWithoutToInput {\n  deliveredAt: DateTime!\n  readAt: DateTime!\n  from: UserCreateOneWithoutSentMessagesInput!\n  date: DateCreateOneInput\n}\n\ntype MessageEdge {\n  node: Message!\n  cursor: String!\n}\n\nenum MessageOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  deliveredAt_ASC\n  deliveredAt_DESC\n  readAt_ASC\n  readAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype MessagePreviousValues {\n  id: ID!\n  createdAt: DateTime!\n  deliveredAt: DateTime!\n  readAt: DateTime!\n}\n\ntype MessageSubscriptionPayload {\n  mutation: MutationType!\n  node: Message\n  updatedFields: [String!]\n  previousValues: MessagePreviousValues\n}\n\ninput MessageSubscriptionWhereInput {\n  AND: [MessageSubscriptionWhereInput!]\n  OR: [MessageSubscriptionWhereInput!]\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: MessageWhereInput\n}\n\ninput MessageUpdateInput {\n  deliveredAt: DateTime\n  readAt: DateTime\n  from: UserUpdateOneWithoutSentMessagesInput\n  to: UserUpdateOneWithoutReceivedMessagesInput\n  date: DateUpdateOneInput\n}\n\ninput MessageUpdateManyWithoutFromInput {\n  create: [MessageCreateWithoutFromInput!]\n  connect: [MessageWhereUniqueInput!]\n  disconnect: [MessageWhereUniqueInput!]\n  delete: [MessageWhereUniqueInput!]\n  update: [MessageUpdateWithoutFromInput!]\n  upsert: [MessageUpsertWithoutFromInput!]\n}\n\ninput MessageUpdateManyWithoutToInput {\n  create: [MessageCreateWithoutToInput!]\n  connect: [MessageWhereUniqueInput!]\n  disconnect: [MessageWhereUniqueInput!]\n  delete: [MessageWhereUniqueInput!]\n  update: [MessageUpdateWithoutToInput!]\n  upsert: [MessageUpsertWithoutToInput!]\n}\n\ninput MessageUpdateWithoutFromDataInput {\n  deliveredAt: DateTime\n  readAt: DateTime\n  to: UserUpdateOneWithoutReceivedMessagesInput\n  date: DateUpdateOneInput\n}\n\ninput MessageUpdateWithoutFromInput {\n  where: MessageWhereUniqueInput!\n  data: MessageUpdateWithoutFromDataInput!\n}\n\ninput MessageUpdateWithoutToDataInput {\n  deliveredAt: DateTime\n  readAt: DateTime\n  from: UserUpdateOneWithoutSentMessagesInput\n  date: DateUpdateOneInput\n}\n\ninput MessageUpdateWithoutToInput {\n  where: MessageWhereUniqueInput!\n  data: MessageUpdateWithoutToDataInput!\n}\n\ninput MessageUpsertWithoutFromInput {\n  where: MessageWhereUniqueInput!\n  update: MessageUpdateWithoutFromDataInput!\n  create: MessageCreateWithoutFromInput!\n}\n\ninput MessageUpsertWithoutToInput {\n  where: MessageWhereUniqueInput!\n  update: MessageUpdateWithoutToDataInput!\n  create: MessageCreateWithoutToInput!\n}\n\ninput MessageWhereInput {\n  AND: [MessageWhereInput!]\n  OR: [MessageWhereInput!]\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  deliveredAt: DateTime\n  deliveredAt_not: DateTime\n  deliveredAt_in: [DateTime!]\n  deliveredAt_not_in: [DateTime!]\n  deliveredAt_lt: DateTime\n  deliveredAt_lte: DateTime\n  deliveredAt_gt: DateTime\n  deliveredAt_gte: DateTime\n  readAt: DateTime\n  readAt_not: DateTime\n  readAt_in: [DateTime!]\n  readAt_not_in: [DateTime!]\n  readAt_lt: DateTime\n  readAt_lte: DateTime\n  readAt_gt: DateTime\n  readAt_gte: DateTime\n  from: UserWhereInput\n  to: UserWhereInput\n  date: DateWhereInput\n}\n\ninput MessageWhereUniqueInput {\n  id: ID\n}\n\ntype Mutation {\n  createUser(data: UserCreateInput!): User!\n  createEducation(data: EducationCreateInput!): Education!\n  createWork(data: WorkCreateInput!): Work!\n  createPhoto(data: PhotoCreateInput!): Photo!\n  createLocation(data: LocationCreateInput!): Location!\n  createAgeFilter(data: AgeFilterCreateInput!): AgeFilter!\n  createNotificationSettings(data: NotificationSettingsCreateInput!): NotificationSettings!\n  createPlace(data: PlaceCreateInput!): Place!\n  createDate(data: DateCreateInput!): Date!\n  createMessage(data: MessageCreateInput!): Message!\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  updateLocation(data: LocationUpdateInput!, where: LocationWhereUniqueInput!): Location\n  updateNotificationSettings(data: NotificationSettingsUpdateInput!, where: NotificationSettingsWhereUniqueInput!): NotificationSettings\n  updatePlace(data: PlaceUpdateInput!, where: PlaceWhereUniqueInput!): Place\n  updateDate(data: DateUpdateInput!, where: DateWhereUniqueInput!): Date\n  updateMessage(data: MessageUpdateInput!, where: MessageWhereUniqueInput!): Message\n  deleteUser(where: UserWhereUniqueInput!): User\n  deleteLocation(where: LocationWhereUniqueInput!): Location\n  deleteNotificationSettings(where: NotificationSettingsWhereUniqueInput!): NotificationSettings\n  deletePlace(where: PlaceWhereUniqueInput!): Place\n  deleteDate(where: DateWhereUniqueInput!): Date\n  deleteMessage(where: MessageWhereUniqueInput!): Message\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  upsertLocation(where: LocationWhereUniqueInput!, create: LocationCreateInput!, update: LocationUpdateInput!): Location!\n  upsertNotificationSettings(where: NotificationSettingsWhereUniqueInput!, create: NotificationSettingsCreateInput!, update: NotificationSettingsUpdateInput!): NotificationSettings!\n  upsertPlace(where: PlaceWhereUniqueInput!, create: PlaceCreateInput!, update: PlaceUpdateInput!): Place!\n  upsertDate(where: DateWhereUniqueInput!, create: DateCreateInput!, update: DateUpdateInput!): Date!\n  upsertMessage(where: MessageWhereUniqueInput!, create: MessageCreateInput!, update: MessageUpdateInput!): Message!\n  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput!): BatchPayload!\n  updateManyEducations(data: EducationUpdateInput!, where: EducationWhereInput!): BatchPayload!\n  updateManyWorks(data: WorkUpdateInput!, where: WorkWhereInput!): BatchPayload!\n  updateManyPhotos(data: PhotoUpdateInput!, where: PhotoWhereInput!): BatchPayload!\n  updateManyLocations(data: LocationUpdateInput!, where: LocationWhereInput!): BatchPayload!\n  updateManyAgeFilters(data: AgeFilterUpdateInput!, where: AgeFilterWhereInput!): BatchPayload!\n  updateManyNotificationSettingses(data: NotificationSettingsUpdateInput!, where: NotificationSettingsWhereInput!): BatchPayload!\n  updateManyPlaces(data: PlaceUpdateInput!, where: PlaceWhereInput!): BatchPayload!\n  updateManyDates(data: DateUpdateInput!, where: DateWhereInput!): BatchPayload!\n  updateManyMessages(data: MessageUpdateInput!, where: MessageWhereInput!): BatchPayload!\n  deleteManyUsers(where: UserWhereInput!): BatchPayload!\n  deleteManyEducations(where: EducationWhereInput!): BatchPayload!\n  deleteManyWorks(where: WorkWhereInput!): BatchPayload!\n  deleteManyPhotos(where: PhotoWhereInput!): BatchPayload!\n  deleteManyLocations(where: LocationWhereInput!): BatchPayload!\n  deleteManyAgeFilters(where: AgeFilterWhereInput!): BatchPayload!\n  deleteManyNotificationSettingses(where: NotificationSettingsWhereInput!): BatchPayload!\n  deleteManyPlaces(where: PlaceWhereInput!): BatchPayload!\n  deleteManyDates(where: DateWhereInput!): BatchPayload!\n  deleteManyMessages(where: MessageWhereInput!): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\ninterface Node {\n  id: ID!\n}\n\ntype NotificationSettingsConnection {\n  pageInfo: PageInfo!\n  edges: [NotificationSettingsEdge]!\n  aggregate: AggregateNotificationSettings!\n}\n\ninput NotificationSettingsCreateInput {\n  onInvite: Boolean\n  onMessage: Boolean\n  onGeneral: Boolean\n  onWink: Boolean\n  onWinkConfirmation: Boolean\n  user: UserCreateOneWithoutNotificationSettingsInput!\n}\n\ninput NotificationSettingsCreateOneWithoutUserInput {\n  create: NotificationSettingsCreateWithoutUserInput\n  connect: NotificationSettingsWhereUniqueInput\n}\n\ninput NotificationSettingsCreateWithoutUserInput {\n  onInvite: Boolean\n  onMessage: Boolean\n  onGeneral: Boolean\n  onWink: Boolean\n  onWinkConfirmation: Boolean\n}\n\ntype NotificationSettingsEdge {\n  node: NotificationSettings!\n  cursor: String!\n}\n\nenum NotificationSettingsOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  onInvite_ASC\n  onInvite_DESC\n  onMessage_ASC\n  onMessage_DESC\n  onGeneral_ASC\n  onGeneral_DESC\n  onWink_ASC\n  onWink_DESC\n  onWinkConfirmation_ASC\n  onWinkConfirmation_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype NotificationSettingsPreviousValues {\n  id: ID!\n  createdAt: DateTime!\n  onInvite: Boolean!\n  onMessage: Boolean!\n  onGeneral: Boolean!\n  onWink: Boolean!\n  onWinkConfirmation: Boolean!\n}\n\ntype NotificationSettingsSubscriptionPayload {\n  mutation: MutationType!\n  node: NotificationSettings\n  updatedFields: [String!]\n  previousValues: NotificationSettingsPreviousValues\n}\n\ninput NotificationSettingsSubscriptionWhereInput {\n  AND: [NotificationSettingsSubscriptionWhereInput!]\n  OR: [NotificationSettingsSubscriptionWhereInput!]\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: NotificationSettingsWhereInput\n}\n\ninput NotificationSettingsUpdateInput {\n  onInvite: Boolean\n  onMessage: Boolean\n  onGeneral: Boolean\n  onWink: Boolean\n  onWinkConfirmation: Boolean\n  user: UserUpdateOneWithoutNotificationSettingsInput\n}\n\ninput NotificationSettingsUpdateOneWithoutUserInput {\n  create: NotificationSettingsCreateWithoutUserInput\n  connect: NotificationSettingsWhereUniqueInput\n  disconnect: NotificationSettingsWhereUniqueInput\n  delete: NotificationSettingsWhereUniqueInput\n  update: NotificationSettingsUpdateWithoutUserInput\n  upsert: NotificationSettingsUpsertWithoutUserInput\n}\n\ninput NotificationSettingsUpdateWithoutUserDataInput {\n  onInvite: Boolean\n  onMessage: Boolean\n  onGeneral: Boolean\n  onWink: Boolean\n  onWinkConfirmation: Boolean\n}\n\ninput NotificationSettingsUpdateWithoutUserInput {\n  where: NotificationSettingsWhereUniqueInput!\n  data: NotificationSettingsUpdateWithoutUserDataInput!\n}\n\ninput NotificationSettingsUpsertWithoutUserInput {\n  where: NotificationSettingsWhereUniqueInput!\n  update: NotificationSettingsUpdateWithoutUserDataInput!\n  create: NotificationSettingsCreateWithoutUserInput!\n}\n\ninput NotificationSettingsWhereInput {\n  AND: [NotificationSettingsWhereInput!]\n  OR: [NotificationSettingsWhereInput!]\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  onInvite: Boolean\n  onInvite_not: Boolean\n  onMessage: Boolean\n  onMessage_not: Boolean\n  onGeneral: Boolean\n  onGeneral_not: Boolean\n  onWink: Boolean\n  onWink_not: Boolean\n  onWinkConfirmation: Boolean\n  onWinkConfirmation_not: Boolean\n  user: UserWhereInput\n}\n\ninput NotificationSettingsWhereUniqueInput {\n  id: ID\n}\n\ntype PageInfo {\n  hasNextPage: Boolean!\n  hasPreviousPage: Boolean!\n  startCursor: String\n  endCursor: String\n}\n\ntype Photo {\n  url: String!\n}\n\ntype PhotoConnection {\n  pageInfo: PageInfo!\n  edges: [PhotoEdge]!\n  aggregate: AggregatePhoto!\n}\n\ninput PhotoCreateInput {\n  url: String!\n}\n\ninput PhotoCreateManyInput {\n  create: [PhotoCreateInput!]\n}\n\ntype PhotoEdge {\n  node: Photo!\n  cursor: String!\n}\n\nenum PhotoOrderByInput {\n  url_ASC\n  url_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype PhotoPreviousValues {\n  url: String!\n}\n\ntype PhotoSubscriptionPayload {\n  mutation: MutationType!\n  node: Photo\n  updatedFields: [String!]\n  previousValues: PhotoPreviousValues\n}\n\ninput PhotoSubscriptionWhereInput {\n  AND: [PhotoSubscriptionWhereInput!]\n  OR: [PhotoSubscriptionWhereInput!]\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: PhotoWhereInput\n}\n\ninput PhotoUpdateInput {\n  url: String\n}\n\ninput PhotoUpdateManyInput {\n  create: [PhotoCreateInput!]\n}\n\ninput PhotoWhereInput {\n  AND: [PhotoWhereInput!]\n  OR: [PhotoWhereInput!]\n  url: String\n  url_not: String\n  url_in: [String!]\n  url_not_in: [String!]\n  url_lt: String\n  url_lte: String\n  url_gt: String\n  url_gte: String\n  url_contains: String\n  url_not_contains: String\n  url_starts_with: String\n  url_not_starts_with: String\n  url_ends_with: String\n  url_not_ends_with: String\n}\n\ntype PlaceConnection {\n  pageInfo: PageInfo!\n  edges: [PlaceEdge]!\n  aggregate: AggregatePlace!\n}\n\ninput PlaceCreatecuratedFieldsInput {\n  set: [String!]\n}\n\ninput PlaceCreateInput {\n  name: String!\n  priceRating: Int\n  googlePlacesId: String!\n  weight: Int!\n  website: String\n  phone: String\n  address: String\n  fromGoogle: Boolean\n  state: String\n  lastGoogleUpdate: DateTime\n  description: String\n  detailsFetched: Boolean\n  openingHours: PlaceCreateopeningHoursInput\n  types: PlaceCreatetypesInput\n  curatedFields: PlaceCreatecuratedFieldsInput\n  location: LocationCreateOneInput!\n  users: UserCreateManyWithoutPlacesInput\n}\n\ninput PlaceCreateManyWithoutUsersInput {\n  create: [PlaceCreateWithoutUsersInput!]\n  connect: [PlaceWhereUniqueInput!]\n}\n\ninput PlaceCreateOneInput {\n  create: PlaceCreateInput\n  connect: PlaceWhereUniqueInput\n}\n\ninput PlaceCreateopeningHoursInput {\n  set: [String!]\n}\n\ninput PlaceCreatetypesInput {\n  set: [String!]\n}\n\ninput PlaceCreateWithoutUsersInput {\n  name: String!\n  priceRating: Int\n  googlePlacesId: String!\n  weight: Int!\n  website: String\n  phone: String\n  address: String\n  fromGoogle: Boolean\n  state: String\n  lastGoogleUpdate: DateTime\n  description: String\n  detailsFetched: Boolean\n  openingHours: PlaceCreateopeningHoursInput\n  types: PlaceCreatetypesInput\n  curatedFields: PlaceCreatecuratedFieldsInput\n  location: LocationCreateOneInput!\n}\n\ntype PlaceEdge {\n  node: Place!\n  cursor: String!\n}\n\nenum PlaceOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  priceRating_ASC\n  priceRating_DESC\n  googlePlacesId_ASC\n  googlePlacesId_DESC\n  createdAt_ASC\n  createdAt_DESC\n  weight_ASC\n  weight_DESC\n  website_ASC\n  website_DESC\n  phone_ASC\n  phone_DESC\n  address_ASC\n  address_DESC\n  fromGoogle_ASC\n  fromGoogle_DESC\n  state_ASC\n  state_DESC\n  lastGoogleUpdate_ASC\n  lastGoogleUpdate_DESC\n  description_ASC\n  description_DESC\n  detailsFetched_ASC\n  detailsFetched_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype PlacePreviousValues {\n  id: ID!\n  name: String!\n  priceRating: Int\n  googlePlacesId: String!\n  createdAt: DateTime!\n  weight: Int!\n  website: String\n  phone: String\n  address: String\n  openingHours: [String!]\n  types: [String!]\n  fromGoogle: Boolean\n  state: String\n  lastGoogleUpdate: DateTime\n  curatedFields: [String!]\n  description: String\n  detailsFetched: Boolean!\n}\n\ntype PlaceSubscriptionPayload {\n  mutation: MutationType!\n  node: Place\n  updatedFields: [String!]\n  previousValues: PlacePreviousValues\n}\n\ninput PlaceSubscriptionWhereInput {\n  AND: [PlaceSubscriptionWhereInput!]\n  OR: [PlaceSubscriptionWhereInput!]\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: PlaceWhereInput\n}\n\ninput PlaceUpdatecuratedFieldsInput {\n  set: [String!]\n}\n\ninput PlaceUpdateInput {\n  name: String\n  priceRating: Int\n  googlePlacesId: String\n  weight: Int\n  website: String\n  phone: String\n  address: String\n  fromGoogle: Boolean\n  state: String\n  lastGoogleUpdate: DateTime\n  description: String\n  detailsFetched: Boolean\n  openingHours: PlaceUpdateopeningHoursInput\n  types: PlaceUpdatetypesInput\n  curatedFields: PlaceUpdatecuratedFieldsInput\n  location: LocationUpdateOneInput\n  users: UserUpdateManyWithoutPlacesInput\n}\n\ninput PlaceUpdateManyWithoutUsersInput {\n  create: [PlaceCreateWithoutUsersInput!]\n  connect: [PlaceWhereUniqueInput!]\n  disconnect: [PlaceWhereUniqueInput!]\n  delete: [PlaceWhereUniqueInput!]\n  update: [PlaceUpdateWithoutUsersInput!]\n  upsert: [PlaceUpsertWithoutUsersInput!]\n}\n\ninput PlaceUpdateOneInput {\n  create: PlaceCreateInput\n  connect: PlaceWhereUniqueInput\n  disconnect: PlaceWhereUniqueInput\n  delete: PlaceWhereUniqueInput\n}\n\ninput PlaceUpdateopeningHoursInput {\n  set: [String!]\n}\n\ninput PlaceUpdatetypesInput {\n  set: [String!]\n}\n\ninput PlaceUpdateWithoutUsersDataInput {\n  name: String\n  priceRating: Int\n  googlePlacesId: String\n  weight: Int\n  website: String\n  phone: String\n  address: String\n  fromGoogle: Boolean\n  state: String\n  lastGoogleUpdate: DateTime\n  description: String\n  detailsFetched: Boolean\n  openingHours: PlaceUpdateopeningHoursInput\n  types: PlaceUpdatetypesInput\n  curatedFields: PlaceUpdatecuratedFieldsInput\n  location: LocationUpdateOneInput\n}\n\ninput PlaceUpdateWithoutUsersInput {\n  where: PlaceWhereUniqueInput!\n  data: PlaceUpdateWithoutUsersDataInput!\n}\n\ninput PlaceUpsertWithoutUsersInput {\n  where: PlaceWhereUniqueInput!\n  update: PlaceUpdateWithoutUsersDataInput!\n  create: PlaceCreateWithoutUsersInput!\n}\n\ninput PlaceWhereInput {\n  AND: [PlaceWhereInput!]\n  OR: [PlaceWhereInput!]\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  priceRating: Int\n  priceRating_not: Int\n  priceRating_in: [Int!]\n  priceRating_not_in: [Int!]\n  priceRating_lt: Int\n  priceRating_lte: Int\n  priceRating_gt: Int\n  priceRating_gte: Int\n  googlePlacesId: String\n  googlePlacesId_not: String\n  googlePlacesId_in: [String!]\n  googlePlacesId_not_in: [String!]\n  googlePlacesId_lt: String\n  googlePlacesId_lte: String\n  googlePlacesId_gt: String\n  googlePlacesId_gte: String\n  googlePlacesId_contains: String\n  googlePlacesId_not_contains: String\n  googlePlacesId_starts_with: String\n  googlePlacesId_not_starts_with: String\n  googlePlacesId_ends_with: String\n  googlePlacesId_not_ends_with: String\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  weight: Int\n  weight_not: Int\n  weight_in: [Int!]\n  weight_not_in: [Int!]\n  weight_lt: Int\n  weight_lte: Int\n  weight_gt: Int\n  weight_gte: Int\n  website: String\n  website_not: String\n  website_in: [String!]\n  website_not_in: [String!]\n  website_lt: String\n  website_lte: String\n  website_gt: String\n  website_gte: String\n  website_contains: String\n  website_not_contains: String\n  website_starts_with: String\n  website_not_starts_with: String\n  website_ends_with: String\n  website_not_ends_with: String\n  phone: String\n  phone_not: String\n  phone_in: [String!]\n  phone_not_in: [String!]\n  phone_lt: String\n  phone_lte: String\n  phone_gt: String\n  phone_gte: String\n  phone_contains: String\n  phone_not_contains: String\n  phone_starts_with: String\n  phone_not_starts_with: String\n  phone_ends_with: String\n  phone_not_ends_with: String\n  address: String\n  address_not: String\n  address_in: [String!]\n  address_not_in: [String!]\n  address_lt: String\n  address_lte: String\n  address_gt: String\n  address_gte: String\n  address_contains: String\n  address_not_contains: String\n  address_starts_with: String\n  address_not_starts_with: String\n  address_ends_with: String\n  address_not_ends_with: String\n  fromGoogle: Boolean\n  fromGoogle_not: Boolean\n  state: String\n  state_not: String\n  state_in: [String!]\n  state_not_in: [String!]\n  state_lt: String\n  state_lte: String\n  state_gt: String\n  state_gte: String\n  state_contains: String\n  state_not_contains: String\n  state_starts_with: String\n  state_not_starts_with: String\n  state_ends_with: String\n  state_not_ends_with: String\n  lastGoogleUpdate: DateTime\n  lastGoogleUpdate_not: DateTime\n  lastGoogleUpdate_in: [DateTime!]\n  lastGoogleUpdate_not_in: [DateTime!]\n  lastGoogleUpdate_lt: DateTime\n  lastGoogleUpdate_lte: DateTime\n  lastGoogleUpdate_gt: DateTime\n  lastGoogleUpdate_gte: DateTime\n  description: String\n  description_not: String\n  description_in: [String!]\n  description_not_in: [String!]\n  description_lt: String\n  description_lte: String\n  description_gt: String\n  description_gte: String\n  description_contains: String\n  description_not_contains: String\n  description_starts_with: String\n  description_not_starts_with: String\n  description_ends_with: String\n  description_not_ends_with: String\n  detailsFetched: Boolean\n  detailsFetched_not: Boolean\n  location: LocationWhereInput\n  users_every: UserWhereInput\n  users_some: UserWhereInput\n  users_none: UserWhereInput\n}\n\ninput PlaceWhereUniqueInput {\n  id: ID\n}\n\ntype Query {\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  educations(where: EducationWhereInput, orderBy: EducationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Education]!\n  works(where: WorkWhereInput, orderBy: WorkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Work]!\n  photos(where: PhotoWhereInput, orderBy: PhotoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Photo]!\n  locations(where: LocationWhereInput, orderBy: LocationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Location]!\n  ageFilters(where: AgeFilterWhereInput, orderBy: AgeFilterOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AgeFilter]!\n  notificationSettingses(where: NotificationSettingsWhereInput, orderBy: NotificationSettingsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [NotificationSettings]!\n  places(where: PlaceWhereInput, orderBy: PlaceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Place]!\n  dates(where: DateWhereInput, orderBy: DateOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Date]!\n  messages(where: MessageWhereInput, orderBy: MessageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Message]!\n  user(where: UserWhereUniqueInput!): User\n  location(where: LocationWhereUniqueInput!): Location\n  notificationSettings(where: NotificationSettingsWhereUniqueInput!): NotificationSettings\n  place(where: PlaceWhereUniqueInput!): Place\n  date(where: DateWhereUniqueInput!): Date\n  message(where: MessageWhereUniqueInput!): Message\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  educationsConnection(where: EducationWhereInput, orderBy: EducationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): EducationConnection!\n  worksConnection(where: WorkWhereInput, orderBy: WorkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): WorkConnection!\n  photosConnection(where: PhotoWhereInput, orderBy: PhotoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PhotoConnection!\n  locationsConnection(where: LocationWhereInput, orderBy: LocationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): LocationConnection!\n  ageFiltersConnection(where: AgeFilterWhereInput, orderBy: AgeFilterOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AgeFilterConnection!\n  notificationSettingsesConnection(where: NotificationSettingsWhereInput, orderBy: NotificationSettingsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): NotificationSettingsConnection!\n  placesConnection(where: PlaceWhereInput, orderBy: PlaceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PlaceConnection!\n  datesConnection(where: DateWhereInput, orderBy: DateOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): DateConnection!\n  messagesConnection(where: MessageWhereInput, orderBy: MessageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): MessageConnection!\n  node(id: ID!): Node\n}\n\ntype Subscription {\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n  education(where: EducationSubscriptionWhereInput): EducationSubscriptionPayload\n  work(where: WorkSubscriptionWhereInput): WorkSubscriptionPayload\n  photo(where: PhotoSubscriptionWhereInput): PhotoSubscriptionPayload\n  location(where: LocationSubscriptionWhereInput): LocationSubscriptionPayload\n  ageFilter(where: AgeFilterSubscriptionWhereInput): AgeFilterSubscriptionPayload\n  notificationSettings(where: NotificationSettingsSubscriptionWhereInput): NotificationSettingsSubscriptionPayload\n  place(where: PlaceSubscriptionWhereInput): PlaceSubscriptionPayload\n  date(where: DateSubscriptionWhereInput): DateSubscriptionPayload\n  message(where: MessageSubscriptionWhereInput): MessageSubscriptionPayload\n}\n\ntype UserConnection {\n  pageInfo: PageInfo!\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  facebookUserId: String!\n  name: String!\n  first_name: String!\n  last_name: String!\n  birthday: DateTime\n  locale: String!\n  email: String\n  gender: GENDER!\n  bio: String\n  lastLogin: DateTime!\n  distanceFilter: Int\n  oneSignalId: String\n  onboarding: Boolean\n  hideAge: Boolean\n  language: LANGUAGES\n  targetGenders: UserCreatetargetGendersInput\n  education: EducationCreateManyInput\n  work: WorkCreateManyInput\n  photos: PhotoCreateManyInput\n  location: LocationCreateOneInput\n  ageFilter: AgeFilterCreateOneInput\n  notificationSettings: NotificationSettingsCreateOneWithoutUserInput\n  places: PlaceCreateManyWithoutUsersInput\n  reported: UserCreateManyWithoutReportedInput\n  uninterested: UserCreateManyWithoutUninterestedInput\n  sentMessages: MessageCreateManyWithoutFromInput\n  receivedMessages: MessageCreateManyWithoutToInput\n  sentDates: DateCreateManyWithoutInviterInput\n  receivedDates: DateCreateManyWithoutInviteeInput\n}\n\ninput UserCreateManyWithoutPlacesInput {\n  create: [UserCreateWithoutPlacesInput!]\n  connect: [UserWhereUniqueInput!]\n}\n\ninput UserCreateManyWithoutReportedInput {\n  create: [UserCreateWithoutReportedInput!]\n  connect: [UserWhereUniqueInput!]\n}\n\ninput UserCreateManyWithoutUninterestedInput {\n  create: [UserCreateWithoutUninterestedInput!]\n  connect: [UserWhereUniqueInput!]\n}\n\ninput UserCreateOneWithoutNotificationSettingsInput {\n  create: UserCreateWithoutNotificationSettingsInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateOneWithoutReceivedDatesInput {\n  create: UserCreateWithoutReceivedDatesInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateOneWithoutReceivedMessagesInput {\n  create: UserCreateWithoutReceivedMessagesInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateOneWithoutSentDatesInput {\n  create: UserCreateWithoutSentDatesInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateOneWithoutSentMessagesInput {\n  create: UserCreateWithoutSentMessagesInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreatetargetGendersInput {\n  set: [GENDER!]\n}\n\ninput UserCreateWithoutNotificationSettingsInput {\n  facebookUserId: String!\n  name: String!\n  first_name: String!\n  last_name: String!\n  birthday: DateTime\n  locale: String!\n  email: String\n  gender: GENDER!\n  bio: String\n  lastLogin: DateTime!\n  distanceFilter: Int\n  oneSignalId: String\n  onboarding: Boolean\n  hideAge: Boolean\n  language: LANGUAGES\n  targetGenders: UserCreatetargetGendersInput\n  education: EducationCreateManyInput\n  work: WorkCreateManyInput\n  photos: PhotoCreateManyInput\n  location: LocationCreateOneInput\n  ageFilter: AgeFilterCreateOneInput\n  places: PlaceCreateManyWithoutUsersInput\n  reported: UserCreateManyWithoutReportedInput\n  uninterested: UserCreateManyWithoutUninterestedInput\n  sentMessages: MessageCreateManyWithoutFromInput\n  receivedMessages: MessageCreateManyWithoutToInput\n  sentDates: DateCreateManyWithoutInviterInput\n  receivedDates: DateCreateManyWithoutInviteeInput\n}\n\ninput UserCreateWithoutPlacesInput {\n  facebookUserId: String!\n  name: String!\n  first_name: String!\n  last_name: String!\n  birthday: DateTime\n  locale: String!\n  email: String\n  gender: GENDER!\n  bio: String\n  lastLogin: DateTime!\n  distanceFilter: Int\n  oneSignalId: String\n  onboarding: Boolean\n  hideAge: Boolean\n  language: LANGUAGES\n  targetGenders: UserCreatetargetGendersInput\n  education: EducationCreateManyInput\n  work: WorkCreateManyInput\n  photos: PhotoCreateManyInput\n  location: LocationCreateOneInput\n  ageFilter: AgeFilterCreateOneInput\n  notificationSettings: NotificationSettingsCreateOneWithoutUserInput\n  reported: UserCreateManyWithoutReportedInput\n  uninterested: UserCreateManyWithoutUninterestedInput\n  sentMessages: MessageCreateManyWithoutFromInput\n  receivedMessages: MessageCreateManyWithoutToInput\n  sentDates: DateCreateManyWithoutInviterInput\n  receivedDates: DateCreateManyWithoutInviteeInput\n}\n\ninput UserCreateWithoutReceivedDatesInput {\n  facebookUserId: String!\n  name: String!\n  first_name: String!\n  last_name: String!\n  birthday: DateTime\n  locale: String!\n  email: String\n  gender: GENDER!\n  bio: String\n  lastLogin: DateTime!\n  distanceFilter: Int\n  oneSignalId: String\n  onboarding: Boolean\n  hideAge: Boolean\n  language: LANGUAGES\n  targetGenders: UserCreatetargetGendersInput\n  education: EducationCreateManyInput\n  work: WorkCreateManyInput\n  photos: PhotoCreateManyInput\n  location: LocationCreateOneInput\n  ageFilter: AgeFilterCreateOneInput\n  notificationSettings: NotificationSettingsCreateOneWithoutUserInput\n  places: PlaceCreateManyWithoutUsersInput\n  reported: UserCreateManyWithoutReportedInput\n  uninterested: UserCreateManyWithoutUninterestedInput\n  sentMessages: MessageCreateManyWithoutFromInput\n  receivedMessages: MessageCreateManyWithoutToInput\n  sentDates: DateCreateManyWithoutInviterInput\n}\n\ninput UserCreateWithoutReceivedMessagesInput {\n  facebookUserId: String!\n  name: String!\n  first_name: String!\n  last_name: String!\n  birthday: DateTime\n  locale: String!\n  email: String\n  gender: GENDER!\n  bio: String\n  lastLogin: DateTime!\n  distanceFilter: Int\n  oneSignalId: String\n  onboarding: Boolean\n  hideAge: Boolean\n  language: LANGUAGES\n  targetGenders: UserCreatetargetGendersInput\n  education: EducationCreateManyInput\n  work: WorkCreateManyInput\n  photos: PhotoCreateManyInput\n  location: LocationCreateOneInput\n  ageFilter: AgeFilterCreateOneInput\n  notificationSettings: NotificationSettingsCreateOneWithoutUserInput\n  places: PlaceCreateManyWithoutUsersInput\n  reported: UserCreateManyWithoutReportedInput\n  uninterested: UserCreateManyWithoutUninterestedInput\n  sentMessages: MessageCreateManyWithoutFromInput\n  sentDates: DateCreateManyWithoutInviterInput\n  receivedDates: DateCreateManyWithoutInviteeInput\n}\n\ninput UserCreateWithoutReportedInput {\n  facebookUserId: String!\n  name: String!\n  first_name: String!\n  last_name: String!\n  birthday: DateTime\n  locale: String!\n  email: String\n  gender: GENDER!\n  bio: String\n  lastLogin: DateTime!\n  distanceFilter: Int\n  oneSignalId: String\n  onboarding: Boolean\n  hideAge: Boolean\n  language: LANGUAGES\n  targetGenders: UserCreatetargetGendersInput\n  education: EducationCreateManyInput\n  work: WorkCreateManyInput\n  photos: PhotoCreateManyInput\n  location: LocationCreateOneInput\n  ageFilter: AgeFilterCreateOneInput\n  notificationSettings: NotificationSettingsCreateOneWithoutUserInput\n  places: PlaceCreateManyWithoutUsersInput\n  uninterested: UserCreateManyWithoutUninterestedInput\n  sentMessages: MessageCreateManyWithoutFromInput\n  receivedMessages: MessageCreateManyWithoutToInput\n  sentDates: DateCreateManyWithoutInviterInput\n  receivedDates: DateCreateManyWithoutInviteeInput\n}\n\ninput UserCreateWithoutSentDatesInput {\n  facebookUserId: String!\n  name: String!\n  first_name: String!\n  last_name: String!\n  birthday: DateTime\n  locale: String!\n  email: String\n  gender: GENDER!\n  bio: String\n  lastLogin: DateTime!\n  distanceFilter: Int\n  oneSignalId: String\n  onboarding: Boolean\n  hideAge: Boolean\n  language: LANGUAGES\n  targetGenders: UserCreatetargetGendersInput\n  education: EducationCreateManyInput\n  work: WorkCreateManyInput\n  photos: PhotoCreateManyInput\n  location: LocationCreateOneInput\n  ageFilter: AgeFilterCreateOneInput\n  notificationSettings: NotificationSettingsCreateOneWithoutUserInput\n  places: PlaceCreateManyWithoutUsersInput\n  reported: UserCreateManyWithoutReportedInput\n  uninterested: UserCreateManyWithoutUninterestedInput\n  sentMessages: MessageCreateManyWithoutFromInput\n  receivedMessages: MessageCreateManyWithoutToInput\n  receivedDates: DateCreateManyWithoutInviteeInput\n}\n\ninput UserCreateWithoutSentMessagesInput {\n  facebookUserId: String!\n  name: String!\n  first_name: String!\n  last_name: String!\n  birthday: DateTime\n  locale: String!\n  email: String\n  gender: GENDER!\n  bio: String\n  lastLogin: DateTime!\n  distanceFilter: Int\n  oneSignalId: String\n  onboarding: Boolean\n  hideAge: Boolean\n  language: LANGUAGES\n  targetGenders: UserCreatetargetGendersInput\n  education: EducationCreateManyInput\n  work: WorkCreateManyInput\n  photos: PhotoCreateManyInput\n  location: LocationCreateOneInput\n  ageFilter: AgeFilterCreateOneInput\n  notificationSettings: NotificationSettingsCreateOneWithoutUserInput\n  places: PlaceCreateManyWithoutUsersInput\n  reported: UserCreateManyWithoutReportedInput\n  uninterested: UserCreateManyWithoutUninterestedInput\n  receivedMessages: MessageCreateManyWithoutToInput\n  sentDates: DateCreateManyWithoutInviterInput\n  receivedDates: DateCreateManyWithoutInviteeInput\n}\n\ninput UserCreateWithoutUninterestedInput {\n  facebookUserId: String!\n  name: String!\n  first_name: String!\n  last_name: String!\n  birthday: DateTime\n  locale: String!\n  email: String\n  gender: GENDER!\n  bio: String\n  lastLogin: DateTime!\n  distanceFilter: Int\n  oneSignalId: String\n  onboarding: Boolean\n  hideAge: Boolean\n  language: LANGUAGES\n  targetGenders: UserCreatetargetGendersInput\n  education: EducationCreateManyInput\n  work: WorkCreateManyInput\n  photos: PhotoCreateManyInput\n  location: LocationCreateOneInput\n  ageFilter: AgeFilterCreateOneInput\n  notificationSettings: NotificationSettingsCreateOneWithoutUserInput\n  places: PlaceCreateManyWithoutUsersInput\n  reported: UserCreateManyWithoutReportedInput\n  sentMessages: MessageCreateManyWithoutFromInput\n  receivedMessages: MessageCreateManyWithoutToInput\n  sentDates: DateCreateManyWithoutInviterInput\n  receivedDates: DateCreateManyWithoutInviteeInput\n}\n\ntype UserEdge {\n  node: User!\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  facebookUserId_ASC\n  facebookUserId_DESC\n  name_ASC\n  name_DESC\n  first_name_ASC\n  first_name_DESC\n  last_name_ASC\n  last_name_DESC\n  birthday_ASC\n  birthday_DESC\n  locale_ASC\n  locale_DESC\n  email_ASC\n  email_DESC\n  gender_ASC\n  gender_DESC\n  bio_ASC\n  bio_DESC\n  lastLogin_ASC\n  lastLogin_DESC\n  distanceFilter_ASC\n  distanceFilter_DESC\n  oneSignalId_ASC\n  oneSignalId_DESC\n  createdAt_ASC\n  createdAt_DESC\n  onboarding_ASC\n  onboarding_DESC\n  hideAge_ASC\n  hideAge_DESC\n  language_ASC\n  language_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  facebookUserId: String!\n  name: String!\n  first_name: String!\n  last_name: String!\n  birthday: DateTime\n  locale: String!\n  email: String\n  gender: GENDER!\n  targetGenders: [GENDER!]\n  bio: String\n  lastLogin: DateTime!\n  distanceFilter: Int\n  oneSignalId: String\n  createdAt: DateTime!\n  onboarding: Boolean!\n  hideAge: Boolean!\n  language: LANGUAGES!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  AND: [UserSubscriptionWhereInput!]\n  OR: [UserSubscriptionWhereInput!]\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n}\n\ninput UserUpdateInput {\n  facebookUserId: String\n  name: String\n  first_name: String\n  last_name: String\n  birthday: DateTime\n  locale: String\n  email: String\n  gender: GENDER\n  bio: String\n  lastLogin: DateTime\n  distanceFilter: Int\n  oneSignalId: String\n  onboarding: Boolean\n  hideAge: Boolean\n  language: LANGUAGES\n  targetGenders: UserUpdatetargetGendersInput\n  education: EducationUpdateManyInput\n  work: WorkUpdateManyInput\n  photos: PhotoUpdateManyInput\n  location: LocationUpdateOneInput\n  ageFilter: AgeFilterUpdateOneInput\n  notificationSettings: NotificationSettingsUpdateOneWithoutUserInput\n  places: PlaceUpdateManyWithoutUsersInput\n  reported: UserUpdateManyWithoutReportedInput\n  uninterested: UserUpdateManyWithoutUninterestedInput\n  sentMessages: MessageUpdateManyWithoutFromInput\n  receivedMessages: MessageUpdateManyWithoutToInput\n  sentDates: DateUpdateManyWithoutInviterInput\n  receivedDates: DateUpdateManyWithoutInviteeInput\n}\n\ninput UserUpdateManyWithoutPlacesInput {\n  create: [UserCreateWithoutPlacesInput!]\n  connect: [UserWhereUniqueInput!]\n  disconnect: [UserWhereUniqueInput!]\n  delete: [UserWhereUniqueInput!]\n  update: [UserUpdateWithoutPlacesInput!]\n  upsert: [UserUpsertWithoutPlacesInput!]\n}\n\ninput UserUpdateManyWithoutReportedInput {\n  create: [UserCreateWithoutReportedInput!]\n  connect: [UserWhereUniqueInput!]\n  disconnect: [UserWhereUniqueInput!]\n  delete: [UserWhereUniqueInput!]\n  update: [UserUpdateWithoutReportedInput!]\n  upsert: [UserUpsertWithoutReportedInput!]\n}\n\ninput UserUpdateManyWithoutUninterestedInput {\n  create: [UserCreateWithoutUninterestedInput!]\n  connect: [UserWhereUniqueInput!]\n  disconnect: [UserWhereUniqueInput!]\n  delete: [UserWhereUniqueInput!]\n  update: [UserUpdateWithoutUninterestedInput!]\n  upsert: [UserUpsertWithoutUninterestedInput!]\n}\n\ninput UserUpdateOneWithoutNotificationSettingsInput {\n  create: UserCreateWithoutNotificationSettingsInput\n  connect: UserWhereUniqueInput\n  disconnect: UserWhereUniqueInput\n  delete: UserWhereUniqueInput\n  update: UserUpdateWithoutNotificationSettingsInput\n  upsert: UserUpsertWithoutNotificationSettingsInput\n}\n\ninput UserUpdateOneWithoutReceivedDatesInput {\n  create: UserCreateWithoutReceivedDatesInput\n  connect: UserWhereUniqueInput\n  disconnect: UserWhereUniqueInput\n  delete: UserWhereUniqueInput\n  update: UserUpdateWithoutReceivedDatesInput\n  upsert: UserUpsertWithoutReceivedDatesInput\n}\n\ninput UserUpdateOneWithoutReceivedMessagesInput {\n  create: UserCreateWithoutReceivedMessagesInput\n  connect: UserWhereUniqueInput\n  disconnect: UserWhereUniqueInput\n  delete: UserWhereUniqueInput\n  update: UserUpdateWithoutReceivedMessagesInput\n  upsert: UserUpsertWithoutReceivedMessagesInput\n}\n\ninput UserUpdateOneWithoutSentDatesInput {\n  create: UserCreateWithoutSentDatesInput\n  connect: UserWhereUniqueInput\n  disconnect: UserWhereUniqueInput\n  delete: UserWhereUniqueInput\n  update: UserUpdateWithoutSentDatesInput\n  upsert: UserUpsertWithoutSentDatesInput\n}\n\ninput UserUpdateOneWithoutSentMessagesInput {\n  create: UserCreateWithoutSentMessagesInput\n  connect: UserWhereUniqueInput\n  disconnect: UserWhereUniqueInput\n  delete: UserWhereUniqueInput\n  update: UserUpdateWithoutSentMessagesInput\n  upsert: UserUpsertWithoutSentMessagesInput\n}\n\ninput UserUpdatetargetGendersInput {\n  set: [GENDER!]\n}\n\ninput UserUpdateWithoutNotificationSettingsDataInput {\n  facebookUserId: String\n  name: String\n  first_name: String\n  last_name: String\n  birthday: DateTime\n  locale: String\n  email: String\n  gender: GENDER\n  bio: String\n  lastLogin: DateTime\n  distanceFilter: Int\n  oneSignalId: String\n  onboarding: Boolean\n  hideAge: Boolean\n  language: LANGUAGES\n  targetGenders: UserUpdatetargetGendersInput\n  education: EducationUpdateManyInput\n  work: WorkUpdateManyInput\n  photos: PhotoUpdateManyInput\n  location: LocationUpdateOneInput\n  ageFilter: AgeFilterUpdateOneInput\n  places: PlaceUpdateManyWithoutUsersInput\n  reported: UserUpdateManyWithoutReportedInput\n  uninterested: UserUpdateManyWithoutUninterestedInput\n  sentMessages: MessageUpdateManyWithoutFromInput\n  receivedMessages: MessageUpdateManyWithoutToInput\n  sentDates: DateUpdateManyWithoutInviterInput\n  receivedDates: DateUpdateManyWithoutInviteeInput\n}\n\ninput UserUpdateWithoutNotificationSettingsInput {\n  where: UserWhereUniqueInput!\n  data: UserUpdateWithoutNotificationSettingsDataInput!\n}\n\ninput UserUpdateWithoutPlacesDataInput {\n  facebookUserId: String\n  name: String\n  first_name: String\n  last_name: String\n  birthday: DateTime\n  locale: String\n  email: String\n  gender: GENDER\n  bio: String\n  lastLogin: DateTime\n  distanceFilter: Int\n  oneSignalId: String\n  onboarding: Boolean\n  hideAge: Boolean\n  language: LANGUAGES\n  targetGenders: UserUpdatetargetGendersInput\n  education: EducationUpdateManyInput\n  work: WorkUpdateManyInput\n  photos: PhotoUpdateManyInput\n  location: LocationUpdateOneInput\n  ageFilter: AgeFilterUpdateOneInput\n  notificationSettings: NotificationSettingsUpdateOneWithoutUserInput\n  reported: UserUpdateManyWithoutReportedInput\n  uninterested: UserUpdateManyWithoutUninterestedInput\n  sentMessages: MessageUpdateManyWithoutFromInput\n  receivedMessages: MessageUpdateManyWithoutToInput\n  sentDates: DateUpdateManyWithoutInviterInput\n  receivedDates: DateUpdateManyWithoutInviteeInput\n}\n\ninput UserUpdateWithoutPlacesInput {\n  where: UserWhereUniqueInput!\n  data: UserUpdateWithoutPlacesDataInput!\n}\n\ninput UserUpdateWithoutReceivedDatesDataInput {\n  facebookUserId: String\n  name: String\n  first_name: String\n  last_name: String\n  birthday: DateTime\n  locale: String\n  email: String\n  gender: GENDER\n  bio: String\n  lastLogin: DateTime\n  distanceFilter: Int\n  oneSignalId: String\n  onboarding: Boolean\n  hideAge: Boolean\n  language: LANGUAGES\n  targetGenders: UserUpdatetargetGendersInput\n  education: EducationUpdateManyInput\n  work: WorkUpdateManyInput\n  photos: PhotoUpdateManyInput\n  location: LocationUpdateOneInput\n  ageFilter: AgeFilterUpdateOneInput\n  notificationSettings: NotificationSettingsUpdateOneWithoutUserInput\n  places: PlaceUpdateManyWithoutUsersInput\n  reported: UserUpdateManyWithoutReportedInput\n  uninterested: UserUpdateManyWithoutUninterestedInput\n  sentMessages: MessageUpdateManyWithoutFromInput\n  receivedMessages: MessageUpdateManyWithoutToInput\n  sentDates: DateUpdateManyWithoutInviterInput\n}\n\ninput UserUpdateWithoutReceivedDatesInput {\n  where: UserWhereUniqueInput!\n  data: UserUpdateWithoutReceivedDatesDataInput!\n}\n\ninput UserUpdateWithoutReceivedMessagesDataInput {\n  facebookUserId: String\n  name: String\n  first_name: String\n  last_name: String\n  birthday: DateTime\n  locale: String\n  email: String\n  gender: GENDER\n  bio: String\n  lastLogin: DateTime\n  distanceFilter: Int\n  oneSignalId: String\n  onboarding: Boolean\n  hideAge: Boolean\n  language: LANGUAGES\n  targetGenders: UserUpdatetargetGendersInput\n  education: EducationUpdateManyInput\n  work: WorkUpdateManyInput\n  photos: PhotoUpdateManyInput\n  location: LocationUpdateOneInput\n  ageFilter: AgeFilterUpdateOneInput\n  notificationSettings: NotificationSettingsUpdateOneWithoutUserInput\n  places: PlaceUpdateManyWithoutUsersInput\n  reported: UserUpdateManyWithoutReportedInput\n  uninterested: UserUpdateManyWithoutUninterestedInput\n  sentMessages: MessageUpdateManyWithoutFromInput\n  sentDates: DateUpdateManyWithoutInviterInput\n  receivedDates: DateUpdateManyWithoutInviteeInput\n}\n\ninput UserUpdateWithoutReceivedMessagesInput {\n  where: UserWhereUniqueInput!\n  data: UserUpdateWithoutReceivedMessagesDataInput!\n}\n\ninput UserUpdateWithoutReportedDataInput {\n  facebookUserId: String\n  name: String\n  first_name: String\n  last_name: String\n  birthday: DateTime\n  locale: String\n  email: String\n  gender: GENDER\n  bio: String\n  lastLogin: DateTime\n  distanceFilter: Int\n  oneSignalId: String\n  onboarding: Boolean\n  hideAge: Boolean\n  language: LANGUAGES\n  targetGenders: UserUpdatetargetGendersInput\n  education: EducationUpdateManyInput\n  work: WorkUpdateManyInput\n  photos: PhotoUpdateManyInput\n  location: LocationUpdateOneInput\n  ageFilter: AgeFilterUpdateOneInput\n  notificationSettings: NotificationSettingsUpdateOneWithoutUserInput\n  places: PlaceUpdateManyWithoutUsersInput\n  uninterested: UserUpdateManyWithoutUninterestedInput\n  sentMessages: MessageUpdateManyWithoutFromInput\n  receivedMessages: MessageUpdateManyWithoutToInput\n  sentDates: DateUpdateManyWithoutInviterInput\n  receivedDates: DateUpdateManyWithoutInviteeInput\n}\n\ninput UserUpdateWithoutReportedInput {\n  where: UserWhereUniqueInput!\n  data: UserUpdateWithoutReportedDataInput!\n}\n\ninput UserUpdateWithoutSentDatesDataInput {\n  facebookUserId: String\n  name: String\n  first_name: String\n  last_name: String\n  birthday: DateTime\n  locale: String\n  email: String\n  gender: GENDER\n  bio: String\n  lastLogin: DateTime\n  distanceFilter: Int\n  oneSignalId: String\n  onboarding: Boolean\n  hideAge: Boolean\n  language: LANGUAGES\n  targetGenders: UserUpdatetargetGendersInput\n  education: EducationUpdateManyInput\n  work: WorkUpdateManyInput\n  photos: PhotoUpdateManyInput\n  location: LocationUpdateOneInput\n  ageFilter: AgeFilterUpdateOneInput\n  notificationSettings: NotificationSettingsUpdateOneWithoutUserInput\n  places: PlaceUpdateManyWithoutUsersInput\n  reported: UserUpdateManyWithoutReportedInput\n  uninterested: UserUpdateManyWithoutUninterestedInput\n  sentMessages: MessageUpdateManyWithoutFromInput\n  receivedMessages: MessageUpdateManyWithoutToInput\n  receivedDates: DateUpdateManyWithoutInviteeInput\n}\n\ninput UserUpdateWithoutSentDatesInput {\n  where: UserWhereUniqueInput!\n  data: UserUpdateWithoutSentDatesDataInput!\n}\n\ninput UserUpdateWithoutSentMessagesDataInput {\n  facebookUserId: String\n  name: String\n  first_name: String\n  last_name: String\n  birthday: DateTime\n  locale: String\n  email: String\n  gender: GENDER\n  bio: String\n  lastLogin: DateTime\n  distanceFilter: Int\n  oneSignalId: String\n  onboarding: Boolean\n  hideAge: Boolean\n  language: LANGUAGES\n  targetGenders: UserUpdatetargetGendersInput\n  education: EducationUpdateManyInput\n  work: WorkUpdateManyInput\n  photos: PhotoUpdateManyInput\n  location: LocationUpdateOneInput\n  ageFilter: AgeFilterUpdateOneInput\n  notificationSettings: NotificationSettingsUpdateOneWithoutUserInput\n  places: PlaceUpdateManyWithoutUsersInput\n  reported: UserUpdateManyWithoutReportedInput\n  uninterested: UserUpdateManyWithoutUninterestedInput\n  receivedMessages: MessageUpdateManyWithoutToInput\n  sentDates: DateUpdateManyWithoutInviterInput\n  receivedDates: DateUpdateManyWithoutInviteeInput\n}\n\ninput UserUpdateWithoutSentMessagesInput {\n  where: UserWhereUniqueInput!\n  data: UserUpdateWithoutSentMessagesDataInput!\n}\n\ninput UserUpdateWithoutUninterestedDataInput {\n  facebookUserId: String\n  name: String\n  first_name: String\n  last_name: String\n  birthday: DateTime\n  locale: String\n  email: String\n  gender: GENDER\n  bio: String\n  lastLogin: DateTime\n  distanceFilter: Int\n  oneSignalId: String\n  onboarding: Boolean\n  hideAge: Boolean\n  language: LANGUAGES\n  targetGenders: UserUpdatetargetGendersInput\n  education: EducationUpdateManyInput\n  work: WorkUpdateManyInput\n  photos: PhotoUpdateManyInput\n  location: LocationUpdateOneInput\n  ageFilter: AgeFilterUpdateOneInput\n  notificationSettings: NotificationSettingsUpdateOneWithoutUserInput\n  places: PlaceUpdateManyWithoutUsersInput\n  reported: UserUpdateManyWithoutReportedInput\n  sentMessages: MessageUpdateManyWithoutFromInput\n  receivedMessages: MessageUpdateManyWithoutToInput\n  sentDates: DateUpdateManyWithoutInviterInput\n  receivedDates: DateUpdateManyWithoutInviteeInput\n}\n\ninput UserUpdateWithoutUninterestedInput {\n  where: UserWhereUniqueInput!\n  data: UserUpdateWithoutUninterestedDataInput!\n}\n\ninput UserUpsertWithoutNotificationSettingsInput {\n  where: UserWhereUniqueInput!\n  update: UserUpdateWithoutNotificationSettingsDataInput!\n  create: UserCreateWithoutNotificationSettingsInput!\n}\n\ninput UserUpsertWithoutPlacesInput {\n  where: UserWhereUniqueInput!\n  update: UserUpdateWithoutPlacesDataInput!\n  create: UserCreateWithoutPlacesInput!\n}\n\ninput UserUpsertWithoutReceivedDatesInput {\n  where: UserWhereUniqueInput!\n  update: UserUpdateWithoutReceivedDatesDataInput!\n  create: UserCreateWithoutReceivedDatesInput!\n}\n\ninput UserUpsertWithoutReceivedMessagesInput {\n  where: UserWhereUniqueInput!\n  update: UserUpdateWithoutReceivedMessagesDataInput!\n  create: UserCreateWithoutReceivedMessagesInput!\n}\n\ninput UserUpsertWithoutReportedInput {\n  where: UserWhereUniqueInput!\n  update: UserUpdateWithoutReportedDataInput!\n  create: UserCreateWithoutReportedInput!\n}\n\ninput UserUpsertWithoutSentDatesInput {\n  where: UserWhereUniqueInput!\n  update: UserUpdateWithoutSentDatesDataInput!\n  create: UserCreateWithoutSentDatesInput!\n}\n\ninput UserUpsertWithoutSentMessagesInput {\n  where: UserWhereUniqueInput!\n  update: UserUpdateWithoutSentMessagesDataInput!\n  create: UserCreateWithoutSentMessagesInput!\n}\n\ninput UserUpsertWithoutUninterestedInput {\n  where: UserWhereUniqueInput!\n  update: UserUpdateWithoutUninterestedDataInput!\n  create: UserCreateWithoutUninterestedInput!\n}\n\ninput UserWhereInput {\n  AND: [UserWhereInput!]\n  OR: [UserWhereInput!]\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  facebookUserId: String\n  facebookUserId_not: String\n  facebookUserId_in: [String!]\n  facebookUserId_not_in: [String!]\n  facebookUserId_lt: String\n  facebookUserId_lte: String\n  facebookUserId_gt: String\n  facebookUserId_gte: String\n  facebookUserId_contains: String\n  facebookUserId_not_contains: String\n  facebookUserId_starts_with: String\n  facebookUserId_not_starts_with: String\n  facebookUserId_ends_with: String\n  facebookUserId_not_ends_with: String\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  first_name: String\n  first_name_not: String\n  first_name_in: [String!]\n  first_name_not_in: [String!]\n  first_name_lt: String\n  first_name_lte: String\n  first_name_gt: String\n  first_name_gte: String\n  first_name_contains: String\n  first_name_not_contains: String\n  first_name_starts_with: String\n  first_name_not_starts_with: String\n  first_name_ends_with: String\n  first_name_not_ends_with: String\n  last_name: String\n  last_name_not: String\n  last_name_in: [String!]\n  last_name_not_in: [String!]\n  last_name_lt: String\n  last_name_lte: String\n  last_name_gt: String\n  last_name_gte: String\n  last_name_contains: String\n  last_name_not_contains: String\n  last_name_starts_with: String\n  last_name_not_starts_with: String\n  last_name_ends_with: String\n  last_name_not_ends_with: String\n  birthday: DateTime\n  birthday_not: DateTime\n  birthday_in: [DateTime!]\n  birthday_not_in: [DateTime!]\n  birthday_lt: DateTime\n  birthday_lte: DateTime\n  birthday_gt: DateTime\n  birthday_gte: DateTime\n  locale: String\n  locale_not: String\n  locale_in: [String!]\n  locale_not_in: [String!]\n  locale_lt: String\n  locale_lte: String\n  locale_gt: String\n  locale_gte: String\n  locale_contains: String\n  locale_not_contains: String\n  locale_starts_with: String\n  locale_not_starts_with: String\n  locale_ends_with: String\n  locale_not_ends_with: String\n  email: String\n  email_not: String\n  email_in: [String!]\n  email_not_in: [String!]\n  email_lt: String\n  email_lte: String\n  email_gt: String\n  email_gte: String\n  email_contains: String\n  email_not_contains: String\n  email_starts_with: String\n  email_not_starts_with: String\n  email_ends_with: String\n  email_not_ends_with: String\n  gender: GENDER\n  gender_not: GENDER\n  gender_in: [GENDER!]\n  gender_not_in: [GENDER!]\n  bio: String\n  bio_not: String\n  bio_in: [String!]\n  bio_not_in: [String!]\n  bio_lt: String\n  bio_lte: String\n  bio_gt: String\n  bio_gte: String\n  bio_contains: String\n  bio_not_contains: String\n  bio_starts_with: String\n  bio_not_starts_with: String\n  bio_ends_with: String\n  bio_not_ends_with: String\n  lastLogin: DateTime\n  lastLogin_not: DateTime\n  lastLogin_in: [DateTime!]\n  lastLogin_not_in: [DateTime!]\n  lastLogin_lt: DateTime\n  lastLogin_lte: DateTime\n  lastLogin_gt: DateTime\n  lastLogin_gte: DateTime\n  distanceFilter: Int\n  distanceFilter_not: Int\n  distanceFilter_in: [Int!]\n  distanceFilter_not_in: [Int!]\n  distanceFilter_lt: Int\n  distanceFilter_lte: Int\n  distanceFilter_gt: Int\n  distanceFilter_gte: Int\n  oneSignalId: String\n  oneSignalId_not: String\n  oneSignalId_in: [String!]\n  oneSignalId_not_in: [String!]\n  oneSignalId_lt: String\n  oneSignalId_lte: String\n  oneSignalId_gt: String\n  oneSignalId_gte: String\n  oneSignalId_contains: String\n  oneSignalId_not_contains: String\n  oneSignalId_starts_with: String\n  oneSignalId_not_starts_with: String\n  oneSignalId_ends_with: String\n  oneSignalId_not_ends_with: String\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  onboarding: Boolean\n  onboarding_not: Boolean\n  hideAge: Boolean\n  hideAge_not: Boolean\n  language: LANGUAGES\n  language_not: LANGUAGES\n  language_in: [LANGUAGES!]\n  language_not_in: [LANGUAGES!]\n  education_every: EducationWhereInput\n  education_some: EducationWhereInput\n  education_none: EducationWhereInput\n  work_every: WorkWhereInput\n  work_some: WorkWhereInput\n  work_none: WorkWhereInput\n  photos_every: PhotoWhereInput\n  photos_some: PhotoWhereInput\n  photos_none: PhotoWhereInput\n  location: LocationWhereInput\n  ageFilter: AgeFilterWhereInput\n  notificationSettings: NotificationSettingsWhereInput\n  places_every: PlaceWhereInput\n  places_some: PlaceWhereInput\n  places_none: PlaceWhereInput\n  reported_every: UserWhereInput\n  reported_some: UserWhereInput\n  reported_none: UserWhereInput\n  uninterested_every: UserWhereInput\n  uninterested_some: UserWhereInput\n  uninterested_none: UserWhereInput\n  sentMessages_every: MessageWhereInput\n  sentMessages_some: MessageWhereInput\n  sentMessages_none: MessageWhereInput\n  receivedMessages_every: MessageWhereInput\n  receivedMessages_some: MessageWhereInput\n  receivedMessages_none: MessageWhereInput\n  sentDates_every: DateWhereInput\n  sentDates_some: DateWhereInput\n  sentDates_none: DateWhereInput\n  receivedDates_every: DateWhereInput\n  receivedDates_some: DateWhereInput\n  receivedDates_none: DateWhereInput\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n  facebookUserId: String\n}\n\ntype Work {\n  employer: String!\n  location: String!\n  position: String!\n}\n\ntype WorkConnection {\n  pageInfo: PageInfo!\n  edges: [WorkEdge]!\n  aggregate: AggregateWork!\n}\n\ninput WorkCreateInput {\n  employer: String!\n  location: String!\n  position: String!\n}\n\ninput WorkCreateManyInput {\n  create: [WorkCreateInput!]\n}\n\ntype WorkEdge {\n  node: Work!\n  cursor: String!\n}\n\nenum WorkOrderByInput {\n  employer_ASC\n  employer_DESC\n  location_ASC\n  location_DESC\n  position_ASC\n  position_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype WorkPreviousValues {\n  employer: String!\n  location: String!\n  position: String!\n}\n\ntype WorkSubscriptionPayload {\n  mutation: MutationType!\n  node: Work\n  updatedFields: [String!]\n  previousValues: WorkPreviousValues\n}\n\ninput WorkSubscriptionWhereInput {\n  AND: [WorkSubscriptionWhereInput!]\n  OR: [WorkSubscriptionWhereInput!]\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: WorkWhereInput\n}\n\ninput WorkUpdateInput {\n  employer: String\n  location: String\n  position: String\n}\n\ninput WorkUpdateManyInput {\n  create: [WorkCreateInput!]\n}\n\ninput WorkWhereInput {\n  AND: [WorkWhereInput!]\n  OR: [WorkWhereInput!]\n  employer: String\n  employer_not: String\n  employer_in: [String!]\n  employer_not_in: [String!]\n  employer_lt: String\n  employer_lte: String\n  employer_gt: String\n  employer_gte: String\n  employer_contains: String\n  employer_not_contains: String\n  employer_starts_with: String\n  employer_not_starts_with: String\n  employer_ends_with: String\n  employer_not_ends_with: String\n  location: String\n  location_not: String\n  location_in: [String!]\n  location_not_in: [String!]\n  location_lt: String\n  location_lte: String\n  location_gt: String\n  location_gte: String\n  location_contains: String\n  location_not_contains: String\n  location_starts_with: String\n  location_not_starts_with: String\n  location_ends_with: String\n  location_not_ends_with: String\n  position: String\n  position_not: String\n  position_in: [String!]\n  position_not_in: [String!]\n  position_lt: String\n  position_lte: String\n  position_gt: String\n  position_gte: String\n  position_contains: String\n  position_not_contains: String\n  position_starts_with: String\n  position_not_starts_with: String\n  position_ends_with: String\n  position_not_ends_with: String\n}\n";
var Prisma = /** @class */ (function (_super) {
    __extends(Prisma, _super);
    function Prisma(_a) {
        var endpoint = _a.endpoint, secret = _a.secret, fragmentReplacements = _a.fragmentReplacements, debug = _a.debug;
        var _this = _super.call(this, { typeDefs: typeDefs, endpoint: endpoint, secret: secret, fragmentReplacements: fragmentReplacements, debug: debug }) || this;
        _this.exists = {
            User: function (where) { return _super.prototype.existsDelegate.call(_this, 'query', 'users', { where: where }, {}, '{ id }'); },
            Education: function (where) { return _super.prototype.existsDelegate.call(_this, 'query', 'educations', { where: where }, {}, '{ id }'); },
            Work: function (where) { return _super.prototype.existsDelegate.call(_this, 'query', 'works', { where: where }, {}, '{ id }'); },
            Photo: function (where) { return _super.prototype.existsDelegate.call(_this, 'query', 'photos', { where: where }, {}, '{ id }'); },
            Location: function (where) { return _super.prototype.existsDelegate.call(_this, 'query', 'locations', { where: where }, {}, '{ id }'); },
            AgeFilter: function (where) { return _super.prototype.existsDelegate.call(_this, 'query', 'ageFilters', { where: where }, {}, '{ id }'); },
            NotificationSettings: function (where) { return _super.prototype.existsDelegate.call(_this, 'query', 'notificationSettingses', { where: where }, {}, '{ id }'); },
            Place: function (where) { return _super.prototype.existsDelegate.call(_this, 'query', 'places', { where: where }, {}, '{ id }'); },
            Date: function (where) { return _super.prototype.existsDelegate.call(_this, 'query', 'dates', { where: where }, {}, '{ id }'); },
            Message: function (where) { return _super.prototype.existsDelegate.call(_this, 'query', 'messages', { where: where }, {}, '{ id }'); }
        };
        _this.query = {
            users: function (args, info) { return _super.prototype.delegate.call(_this, 'query', 'users', args, {}, info); },
            educations: function (args, info) { return _super.prototype.delegate.call(_this, 'query', 'educations', args, {}, info); },
            works: function (args, info) { return _super.prototype.delegate.call(_this, 'query', 'works', args, {}, info); },
            photos: function (args, info) { return _super.prototype.delegate.call(_this, 'query', 'photos', args, {}, info); },
            locations: function (args, info) { return _super.prototype.delegate.call(_this, 'query', 'locations', args, {}, info); },
            ageFilters: function (args, info) { return _super.prototype.delegate.call(_this, 'query', 'ageFilters', args, {}, info); },
            notificationSettingses: function (args, info) { return _super.prototype.delegate.call(_this, 'query', 'notificationSettingses', args, {}, info); },
            places: function (args, info) { return _super.prototype.delegate.call(_this, 'query', 'places', args, {}, info); },
            dates: function (args, info) { return _super.prototype.delegate.call(_this, 'query', 'dates', args, {}, info); },
            messages: function (args, info) { return _super.prototype.delegate.call(_this, 'query', 'messages', args, {}, info); },
            user: function (args, info) { return _super.prototype.delegate.call(_this, 'query', 'user', args, {}, info); },
            location: function (args, info) { return _super.prototype.delegate.call(_this, 'query', 'location', args, {}, info); },
            notificationSettings: function (args, info) { return _super.prototype.delegate.call(_this, 'query', 'notificationSettings', args, {}, info); },
            place: function (args, info) { return _super.prototype.delegate.call(_this, 'query', 'place', args, {}, info); },
            date: function (args, info) { return _super.prototype.delegate.call(_this, 'query', 'date', args, {}, info); },
            message: function (args, info) { return _super.prototype.delegate.call(_this, 'query', 'message', args, {}, info); },
            usersConnection: function (args, info) { return _super.prototype.delegate.call(_this, 'query', 'usersConnection', args, {}, info); },
            educationsConnection: function (args, info) { return _super.prototype.delegate.call(_this, 'query', 'educationsConnection', args, {}, info); },
            worksConnection: function (args, info) { return _super.prototype.delegate.call(_this, 'query', 'worksConnection', args, {}, info); },
            photosConnection: function (args, info) { return _super.prototype.delegate.call(_this, 'query', 'photosConnection', args, {}, info); },
            locationsConnection: function (args, info) { return _super.prototype.delegate.call(_this, 'query', 'locationsConnection', args, {}, info); },
            ageFiltersConnection: function (args, info) { return _super.prototype.delegate.call(_this, 'query', 'ageFiltersConnection', args, {}, info); },
            notificationSettingsesConnection: function (args, info) { return _super.prototype.delegate.call(_this, 'query', 'notificationSettingsesConnection', args, {}, info); },
            placesConnection: function (args, info) { return _super.prototype.delegate.call(_this, 'query', 'placesConnection', args, {}, info); },
            datesConnection: function (args, info) { return _super.prototype.delegate.call(_this, 'query', 'datesConnection', args, {}, info); },
            messagesConnection: function (args, info) { return _super.prototype.delegate.call(_this, 'query', 'messagesConnection', args, {}, info); },
            node: function (args, info) { return _super.prototype.delegate.call(_this, 'query', 'node', args, {}, info); }
        };
        _this.mutation = {
            createUser: function (args, info) { return _super.prototype.delegate.call(_this, 'mutation', 'createUser', args, {}, info); },
            createEducation: function (args, info) { return _super.prototype.delegate.call(_this, 'mutation', 'createEducation', args, {}, info); },
            createWork: function (args, info) { return _super.prototype.delegate.call(_this, 'mutation', 'createWork', args, {}, info); },
            createPhoto: function (args, info) { return _super.prototype.delegate.call(_this, 'mutation', 'createPhoto', args, {}, info); },
            createLocation: function (args, info) { return _super.prototype.delegate.call(_this, 'mutation', 'createLocation', args, {}, info); },
            createAgeFilter: function (args, info) { return _super.prototype.delegate.call(_this, 'mutation', 'createAgeFilter', args, {}, info); },
            createNotificationSettings: function (args, info) { return _super.prototype.delegate.call(_this, 'mutation', 'createNotificationSettings', args, {}, info); },
            createPlace: function (args, info) { return _super.prototype.delegate.call(_this, 'mutation', 'createPlace', args, {}, info); },
            createDate: function (args, info) { return _super.prototype.delegate.call(_this, 'mutation', 'createDate', args, {}, info); },
            createMessage: function (args, info) { return _super.prototype.delegate.call(_this, 'mutation', 'createMessage', args, {}, info); },
            updateUser: function (args, info) { return _super.prototype.delegate.call(_this, 'mutation', 'updateUser', args, {}, info); },
            updateLocation: function (args, info) { return _super.prototype.delegate.call(_this, 'mutation', 'updateLocation', args, {}, info); },
            updateNotificationSettings: function (args, info) { return _super.prototype.delegate.call(_this, 'mutation', 'updateNotificationSettings', args, {}, info); },
            updatePlace: function (args, info) { return _super.prototype.delegate.call(_this, 'mutation', 'updatePlace', args, {}, info); },
            updateDate: function (args, info) { return _super.prototype.delegate.call(_this, 'mutation', 'updateDate', args, {}, info); },
            updateMessage: function (args, info) { return _super.prototype.delegate.call(_this, 'mutation', 'updateMessage', args, {}, info); },
            deleteUser: function (args, info) { return _super.prototype.delegate.call(_this, 'mutation', 'deleteUser', args, {}, info); },
            deleteLocation: function (args, info) { return _super.prototype.delegate.call(_this, 'mutation', 'deleteLocation', args, {}, info); },
            deleteNotificationSettings: function (args, info) { return _super.prototype.delegate.call(_this, 'mutation', 'deleteNotificationSettings', args, {}, info); },
            deletePlace: function (args, info) { return _super.prototype.delegate.call(_this, 'mutation', 'deletePlace', args, {}, info); },
            deleteDate: function (args, info) { return _super.prototype.delegate.call(_this, 'mutation', 'deleteDate', args, {}, info); },
            deleteMessage: function (args, info) { return _super.prototype.delegate.call(_this, 'mutation', 'deleteMessage', args, {}, info); },
            upsertUser: function (args, info) { return _super.prototype.delegate.call(_this, 'mutation', 'upsertUser', args, {}, info); },
            upsertLocation: function (args, info) { return _super.prototype.delegate.call(_this, 'mutation', 'upsertLocation', args, {}, info); },
            upsertNotificationSettings: function (args, info) { return _super.prototype.delegate.call(_this, 'mutation', 'upsertNotificationSettings', args, {}, info); },
            upsertPlace: function (args, info) { return _super.prototype.delegate.call(_this, 'mutation', 'upsertPlace', args, {}, info); },
            upsertDate: function (args, info) { return _super.prototype.delegate.call(_this, 'mutation', 'upsertDate', args, {}, info); },
            upsertMessage: function (args, info) { return _super.prototype.delegate.call(_this, 'mutation', 'upsertMessage', args, {}, info); },
            updateManyUsers: function (args, info) { return _super.prototype.delegate.call(_this, 'mutation', 'updateManyUsers', args, {}, info); },
            updateManyEducations: function (args, info) { return _super.prototype.delegate.call(_this, 'mutation', 'updateManyEducations', args, {}, info); },
            updateManyWorks: function (args, info) { return _super.prototype.delegate.call(_this, 'mutation', 'updateManyWorks', args, {}, info); },
            updateManyPhotos: function (args, info) { return _super.prototype.delegate.call(_this, 'mutation', 'updateManyPhotos', args, {}, info); },
            updateManyLocations: function (args, info) { return _super.prototype.delegate.call(_this, 'mutation', 'updateManyLocations', args, {}, info); },
            updateManyAgeFilters: function (args, info) { return _super.prototype.delegate.call(_this, 'mutation', 'updateManyAgeFilters', args, {}, info); },
            updateManyNotificationSettingses: function (args, info) { return _super.prototype.delegate.call(_this, 'mutation', 'updateManyNotificationSettingses', args, {}, info); },
            updateManyPlaces: function (args, info) { return _super.prototype.delegate.call(_this, 'mutation', 'updateManyPlaces', args, {}, info); },
            updateManyDates: function (args, info) { return _super.prototype.delegate.call(_this, 'mutation', 'updateManyDates', args, {}, info); },
            updateManyMessages: function (args, info) { return _super.prototype.delegate.call(_this, 'mutation', 'updateManyMessages', args, {}, info); },
            deleteManyUsers: function (args, info) { return _super.prototype.delegate.call(_this, 'mutation', 'deleteManyUsers', args, {}, info); },
            deleteManyEducations: function (args, info) { return _super.prototype.delegate.call(_this, 'mutation', 'deleteManyEducations', args, {}, info); },
            deleteManyWorks: function (args, info) { return _super.prototype.delegate.call(_this, 'mutation', 'deleteManyWorks', args, {}, info); },
            deleteManyPhotos: function (args, info) { return _super.prototype.delegate.call(_this, 'mutation', 'deleteManyPhotos', args, {}, info); },
            deleteManyLocations: function (args, info) { return _super.prototype.delegate.call(_this, 'mutation', 'deleteManyLocations', args, {}, info); },
            deleteManyAgeFilters: function (args, info) { return _super.prototype.delegate.call(_this, 'mutation', 'deleteManyAgeFilters', args, {}, info); },
            deleteManyNotificationSettingses: function (args, info) { return _super.prototype.delegate.call(_this, 'mutation', 'deleteManyNotificationSettingses', args, {}, info); },
            deleteManyPlaces: function (args, info) { return _super.prototype.delegate.call(_this, 'mutation', 'deleteManyPlaces', args, {}, info); },
            deleteManyDates: function (args, info) { return _super.prototype.delegate.call(_this, 'mutation', 'deleteManyDates', args, {}, info); },
            deleteManyMessages: function (args, info) { return _super.prototype.delegate.call(_this, 'mutation', 'deleteManyMessages', args, {}, info); }
        };
        _this.subscription = {
            user: function (args, infoOrQuery) { return _super.prototype.delegateSubscription.call(_this, 'user', args, {}, infoOrQuery); },
            education: function (args, infoOrQuery) { return _super.prototype.delegateSubscription.call(_this, 'education', args, {}, infoOrQuery); },
            work: function (args, infoOrQuery) { return _super.prototype.delegateSubscription.call(_this, 'work', args, {}, infoOrQuery); },
            photo: function (args, infoOrQuery) { return _super.prototype.delegateSubscription.call(_this, 'photo', args, {}, infoOrQuery); },
            location: function (args, infoOrQuery) { return _super.prototype.delegateSubscription.call(_this, 'location', args, {}, infoOrQuery); },
            ageFilter: function (args, infoOrQuery) { return _super.prototype.delegateSubscription.call(_this, 'ageFilter', args, {}, infoOrQuery); },
            notificationSettings: function (args, infoOrQuery) { return _super.prototype.delegateSubscription.call(_this, 'notificationSettings', args, {}, infoOrQuery); },
            place: function (args, infoOrQuery) { return _super.prototype.delegateSubscription.call(_this, 'place', args, {}, infoOrQuery); },
            date: function (args, infoOrQuery) { return _super.prototype.delegateSubscription.call(_this, 'date', args, {}, infoOrQuery); },
            message: function (args, infoOrQuery) { return _super.prototype.delegateSubscription.call(_this, 'message', args, {}, infoOrQuery); }
        };
        return _this;
    }
    return Prisma;
}(prisma_binding_1.Prisma));
exports.Prisma = Prisma;
//# sourceMappingURL=prisma.js.map